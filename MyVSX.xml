<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyVSX</name>
    </assembly>
    <members>
        <member name="F:CodeProduce.Solution.SolutionAction.CurrSolution">
            <summary>
            当前解决方案，可能是新创建的，也可能是加载的
            </summary>
        </member>
        <member name="T:CodeProduce.CodeAnalysis.CodeAnysis">
            <summary>
            代码分析类抽象类
            </summary>
        </member>
        <member name="T:CodeProduce.BaseCode.EntityInfo">
            <summary>
            实体信息类
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.EntityInfo.Name">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.EntityInfo.IName">
            <summary>
            实体接口名称
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.EntityInfo.FName">
            <summary>
            实体作为局部变量的名称
            </summary>
        </member>
        <member name="M:CodeProduce.Temp.CodeHelp.AppendInCode(System.Text.StringBuilder,System.Int32,System.String,System.Object[])">
            <summary>
            插入缩进代码
            </summary>
            <param name="obj"></param>
            <param name="str"></param>
        </member>
        <member name="T:CodeProduce.Temp.CodeBuild">
            <summary>
            模板处理，代码生成
            </summary>
        </member>
        <member name="M:CodeProduce.Temp.CodeBuild.BaseBuild(CodeProduce.BaseCode.TempInfo,CodeProduce.BaseCode.EntityInfo)">
            <summary>
            传入实体和模板，生成代码
            </summary>
            <param name="temp"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:CodeProduce.Temp.CodeBuild.BuildBaseCode(System.Collections.Generic.List{CodeProduce.BaseCode.TempInfo},System.Collections.Generic.List{CodeProduce.BaseCode.EntityInfo})">
            <summary>
            代码生成入口函数，传入模板列表和实体列表
            </summary>
            <param name="temps"></param>
            <param name="entitys"></param>
            <returns></returns>
        </member>
        <member name="M:CodeProduce.Temp.CodeBuild.LineExchange(System.String,CodeProduce.BaseCode.EntityInfo)">
            <summary>
            单行文本替换
            </summary>
            <param name="oldLine"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:CodeProduce.Temp.CodeBuild.CodeExchange(System.String,CodeProduce.BaseCode.EntityInfo)">
            <summary>
            模板替换核心函数
            </summary>
            <param name="temp"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:CodeProduce.Temp.CodeBuild.FileNameExchange(System.String,System.String)">
            <summary>
            文件名替换
            </summary>
            <param name="oldName"></param>
            <returns></returns>
        </member>
        <member name="T:MyVSX.Connect">
            <summary>用于实现外接程序的对象。</summary>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MyVSX.Connect.#ctor">
            <summary>实现外接程序对象的构造函数。请将您的初始化代码置于此方法内。</summary>
        </member>
        <member name="M:MyVSX.Connect.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
            <summary>实现 IDTExtensibility2 接口的 OnConnection 方法。接收正在加载外接程序的通知。</summary>
            <param term='application'>宿主应用程序的根对象。</param>
            <param term='connectMode'>描述外接程序的加载方式。</param>
            <param term='addInInst'>表示此外接程序的对象。</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MyVSX.Connect.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
            <summary>实现 IDTExtensibility2 接口的 OnDisconnection 方法。接收正在卸载外接程序的通知。</summary>
            <param term='disconnectMode'>描述外接程序的卸载方式。</param>
            <param term='custom'>特定于宿主应用程序的参数数组。</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MyVSX.Connect.OnAddInsUpdate(System.Array@)">
            <summary>实现 IDTExtensibility2 接口的 OnAddInsUpdate 方法。当外接程序集合已发生更改时接收通知。</summary>
            <param term='custom'>特定于宿主应用程序的参数数组。</param>
            <seealso class='IDTExtensibility2' />		
        </member>
        <member name="M:MyVSX.Connect.OnStartupComplete(System.Array@)">
            <summary>实现 IDTExtensibility2 接口的 OnStartupComplete 方法。接收宿主应用程序已完成加载的通知。</summary>
            <param term='custom'>特定于宿主应用程序的参数数组。</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MyVSX.Connect.OnBeginShutdown(System.Array@)">
            <summary>实现 IDTExtensibility2 接口的 OnBeginShutdown 方法。接收正在卸载宿主应用程序的通知。</summary>
            <param term='custom'>特定于宿主应用程序的参数数组。</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MyVSX.Connect.QueryStatus(System.String,EnvDTE.vsCommandStatusTextWanted,EnvDTE.vsCommandStatus@,System.Object@)">
            <summary>实现 IDTCommandTarget 接口的 QueryStatus 方法。此方法在更新该命令的可用性时调用</summary>
            <param term='commandName'>要确定其状态的命令的名称。</param>
            <param term='neededText'>该命令所需的文本。</param>
            <param term='status'>该命令在用户界面中的状态。</param>
            <param term='commandText'>neededText 参数所要求的文本。</param>
            <seealso class='Exec' />
        </member>
        <member name="M:MyVSX.Connect.Exec(System.String,EnvDTE.vsCommandExecOption,System.Object@,System.Object@,System.Boolean@)">
            <summary>实现 IDTCommandTarget 接口的 Exec 方法。此方法在调用该命令时调用。</summary>
            <param term='commandName'>要执行的命令的名称。</param>
            <param term='executeOption'>描述该命令应如何运行。</param>
            <param term='varIn'>从调用方传递到命令处理程序的参数。</param>
            <param term='varOut'>从命令处理程序传递到调用方的参数。</param>
            <param term='handled'>通知调用方此命令是否已被处理。</param>
            <seealso class='Exec' />
        </member>
        <member name="M:CodeProduce.Temp.CodeBuildService.CodeFileReBuild(System.String,System.String)">
            <summary>
            将生成的代码添加到指定的文件中
            </summary>
            <param name="path">代码文件路径</param>
            <param name="code">生成的代码</param>
        </member>
        <member name="F:CodeProduce.BaseCode.FieldType.SimpleField">
            <summary>
            简单类型
            </summary>
        </member>
        <member name="F:CodeProduce.BaseCode.FieldType.ComplexField">
            <summary>
            复杂类型
            </summary>
        </member>
        <member name="T:CodeProduce.BaseCode.FieldInfo">
            <summary>
            字段信息类
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.FieldInfo.Name">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.FieldInfo.PName">
            <summary>
            属性作为参数时的名称
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.FieldInfo.DataType">
            <summary>
            属性数据类型
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.FieldInfo.FieldType">
            <summary>
            属性类型（简单、复杂）
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.FieldInfo.Nullable">
            <summary>
            是否可空
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.FieldInfo.MainKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.ComplexFieldInfo.IsMulti">
            <summary>
            是否是个集合
            </summary>
        </member>
        <member name="F:MyVSX.FrmMain.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyVSX.FrmMain.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyVSX.FrmMain.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MyVSX.FrmMain.MoveFileToProject">
            <summary>
            将生成的文件添加到项目对应的目录中
            </summary>
        </member>
        <member name="F:CodeProduce.BaseCode.TempType.ENTITYNAME">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="F:CodeProduce.BaseCode.TempType.PRIMARYKEY">
            <summary>
            主键
            </summary>
        </member>
        <member name="F:CodeProduce.BaseCode.TempType.FIELDS">
            <summary>
            字段生成区域
            </summary>
        </member>
        <member name="F:CodeProduce.BaseCode.TempType.RELATIONSHIP">
            <summary>
            导航属性区域
            </summary>
        </member>
        <member name="T:CodeProduce.BaseCode.TempInfo">
            <summary>
            模板信息
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.TempInfo.BuildFilename">
            <summary>
            生成的文件名称
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.TempInfo.SavePath">
            <summary>
            生成的代码文件保存路径
            </summary>
        </member>
        <member name="P:CodeProduce.BaseCode.TempInfo.ProjectPath">
            <summary>
            复制到目标项目的路径
            </summary>
        </member>
        <member name="T:CodeProduce.CodeAnalysis.EntityModel4Analysis">
            <summary>
            分析XML文件，获取模型信息
            </summary>
        </member>
        <member name="F:CodeProduce.CodeAnalysis.EntityModel4Analysis._nameSpace">
            <summary>
            
            </summary>
        </member>
        <member name="T:CodeProduce.CodeAnalysis.EntityModel1Analysis">
            <summary>
            分析XML文件，获取模型信息
            </summary>
        </member>
        <member name="F:CodeProduce.CodeAnalysis.EntityModel1Analysis._nameSpace">
            <summary>
            
            </summary>
        </member>
        <member name="M:CodeProduce.CodeAnalysis.XMLHelper.GetChild(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
            <summary>
            获取节点,遍历所有子节点，直到找出符合条件的对象
            </summary>
            <param name="parentNode"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CodeProduce.Solution.SolutionEntity.SaveHashCode">
            <summary>
            保存HASHCODE，用以比较退出时是否有修改
            </summary>
        </member>
        <member name="F:MyVSX.FmAddTemp.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MyVSX.FmAddTemp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MyVSX.FmAddTemp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
